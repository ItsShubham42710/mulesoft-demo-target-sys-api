# This is a basic mule workflow 
name: mule-cicd-affirm-demo - WF


#Some global variables which we might need later for more flexibility (variables should be declared containing [A-Za-Z0-9_])

#Creating global environment variables
env:
  org_id: 84f399d8-886e-4eae-8f76-d9dbb4692a18
  projectname: mule-cicd-affirm-demo
  app_name: mule-cicd-affirm-demo
  app_runtime: '4.4.0'
  cloudhub_region: us-west-2
  worker_type: MICRO
  worker_count: '1'
  agent_enabled: 'true'
  nexus_username: ${{ secrets.NEXUS_USERNAME }}
  nexus_password: ${{ secrets.NEXUS_PASSWORD }}
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events for the given branches
  push:
    branches: [ dev, test ]

#   pull_request:
#     branches: [ main , test , dev ]

    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Publish-to-Cloudhub-Development:
    if: github.ref == 'refs/heads/Dev'
    runs-on: ubuntu-latest
    environment: development
    env:
      environment: Development
      mule_env: Development
      # secret_key: ${{ secrets.DEV_SECRET_KEY }}
      platform_client_secret: ${{ secrets.ANYPOINT_PLATFORM_CLIENT_SECRET }}
      platform_client_id: ${{ secrets.ANYPOINT_PLATFORM_CLIENT_ID }}
      app_client_secret: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
      app_client_id: ${{ secrets.CONNECTED_APP_CLIENT_ID }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Sets Pom Path for Hashing
      - name: Set Pom Path
        run: echo "pompath=pom.xml" >> $GITHUB_ENV  #$(echo $projectname)/
        
      - name: Set application name
        run: echo "application_name=$(echo $app_name)-$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Checking Cache
        uses: actions/cache@v3.0.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles(env.pompath) }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Build with Maven
        run: mvn -B clean package -s ".maven/settings.xml"
        
      - name: Upload artifact 
        run: mkdir staging && cp target/*.jar staging
        
      - uses: actions/upload-artifact@v2
        with:
           name: Package
           path: staging
          
      - name: Deploy to Cloudhub #cd $projectname
        run: |
          mvn deploy -s ".maven/settings.xml" -DmuleDeploy -Dapp.runtime=$app_runtime -Denvironment=$environment 

  Publish-to-Cloudhub-Test:
    if: github.ref == 'refs/heads/Test'
    runs-on: ubuntu-latest
    environment: Test
    env:
      environment: Test
      mule_env: test
      # secret_key: ${{ secrets.TEST_SECRET_KEY }}
      # platform_client_secret: ${{ secrets.ANYPOINT_PLATFORM_CLIENT_SECRET }}
      # platform_client_id: ${{ secrets.ANYPOINT_PLATFORM_CLIENT_ID }}
      app_client_secret: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
      app_client_id: ${{ secrets.CONNECTED_APP_CLIENT_ID }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Sets Pom Path for Hashing
      - name: Set Pom Path
        run: echo "pompath=pom.xml" >> $GITHUB_ENV
        
      - name: Set application name
        run: echo "application_name=$(echo $app_name)-$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Checking Cache
        uses: actions/cache@v3.0.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles(env.pompath) }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Deploy to Cloudhub #cd $projectname
        run: |
            mvn clean deploy -s ".maven/settings.xml" -DmuleDeploy -Dapp.runtime=$app_runtime -Denvironment=$environment
  
  Publish-to-Cloudhub-Prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    env:
      environment: Prod
      mule_env: prod
      secret_key: ${{ secrets.PROD_SECRET_KEY }}
      platform_client_secret: ${{ secrets.PROD_ANYPOINT_PLATFORM_CLIENT_SECRET }}
      platform_client_id: ${{ secrets.PROD_ANYPOINT_PLATFORM_CLIENT_ID }}
      app_client_secret: ${{ secrets.PROD_CONNECTED_APP_CLIENT_SECRET }}
      app_client_id: ${{ secrets.PROD_CONNECTED_APP_CLIENT_ID }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Sets Pom Path for Hashing
      - name: Set Pom Path
        run: echo "pompath=pom.xml" >> $GITHUB_ENV
        
      - name: Set application name
        run: echo "application_name=$(echo $app_name)" >> $GITHUB_ENV
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Checking Cache
        uses: actions/cache@v3.0.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles(env.pompath) }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Deploy to Cloudhub #cd $projectname
        run: |
            mvn clean deploy -s ".maven/settings.xml" -DmuleDeploy -Dapp.runtime=$app_runtime -Denvironment=$environment
